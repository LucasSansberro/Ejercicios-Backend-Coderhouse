{{> navbar}}
<br/>

<h1 class="text-center">Listado de productos</h1>
<div class="container mt-5 d-flex justify-content-between flex-wrap ">
    {{#if productsExist}}
        {{#each products}}
            <div class="card m-5 " style="width:18rem">
                <img src="{{this.thumbnail}}" class="card-img-top" alt={{this.title}}/>
                <div class="card-body d-flex flex-column justify-content-between">
                    <h5 class="card-title">{{this.title}}</h5>
                    <p class="card-text">Precio: ${{this.price}}</p>
                    <p>ID: {{this._id}}</p>
                </div>
                <div class="d-flex flex-column justify-content-between" style="height: 8rem;">
                    <form class="mb-0" action="/api/carrito/producto/{{this._id}}" method="POST">
                        <button class="btn btn-primary w-100">Agregar al carrito</button>
                    </form>
                    {{!-- As form doesn't accept delete and put method, i've created a script below --}}
                        <button class="btn btn-danger w-100" onclick="deleteProduct('{{this.fetchURL}}','{{this._id}}')">
                          Eliminar producto
                        </button>
                        <button class="btn btn-secondary w-100" onclick="editProduct('{{this.fetchURL}}','{{this.title}}',
                        '{{this.description}}','{{this.code}}','{{this.price}}','{{this.stock}}',
                         '{{this.thumbnail}}', '{{this._id}}')">Editar producto</button>
                </div>   
            </div>
        {{/each}}
        {{else}}
            <h1 class="text-center">No se encontraron productos</h1>
    {{/if}}
</div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      function editProduct (url,title, description, code, price, stock, thumbnail, id){
        Swal.fire({
          title: "Editar producto",
          html: `
          <div class="d-flex flex-column justify-content-around">
            <label for="title">Título</label>
            <input type="text" id="title" class="swal2-input mb-4" name="title" value='${title}''>
            <label for="description">Descripción</label>
            <input type="text" id="description" class="swal2-input mb-4" name="description" value='${description}'>
            <label for="code">Código</label>
            <input type="text" id="code" class="swal2-input mb-4" name="code" value=${code}>
            <label for="price">Precio</label>
            <input type="number" id="price" class="swal2-input mb-4" name="price" value=${price}>
            <label for="stock">Stock</label>
            <input type="number" id="stock" class="swal2-input mb-4" name="stock" value=${stock}>
            <label for="thumbnail">Thumbnail</label> 
            <input type="text" id="thumbnail" class="swal2-input" name="thumbnail" value=${thumbnail}>
          </div>`,
          confirmButtonText: "Confirmar cambios",
          focusConfirm: false,
          showCancelButton: true,
          cancelButtonText: "Cancelar",
          showCloseButton: true,
          preConfirm: () => {
            const title = Swal.getPopup().querySelector("#title").value;
            const description = Swal.getPopup().querySelector("#description").value;
            const code = Swal.getPopup().querySelector("#code").value;
            const price = Swal.getPopup().querySelector("#price").value;
            const stock = Swal.getPopup().querySelector("#stock").value;
            const thumbnail = Swal.getPopup().querySelector("#thumbnail").value;

            return { title, description, code, price, stock, thumbnail, id };
          },
        })
        .then((result) => {
          if (result.isConfirmed) {
            const updatedValues = {
              title: result.value.title,
              description: result.value.description,
              code: result.value.code,
              price: parseInt(result.value.price),
              stock: parseInt(result.value.stock),
              thumbnail: result.value.thumbnail,
              id
            };
            fetch(`${url}/api/productos/${id}`, {
              method: "PUT",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(updatedValues),
            })
            location.reload()
          }
        })
        .catch(() => {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Error de parte del servidor',
          })
        });
      };

      function deleteProduct(url, id){
        fetch(`${url}/api/productos/${id}`,{
          method:"DELETE"
        })
        location.reload()
      }
    </script>
 

<br/>
{{> footer}}
<br/>